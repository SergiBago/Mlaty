<Application x:Class="PGTAWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PGTAWPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="font_style_Content" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily"
                        Value="Microsoft Sans Serif"/>
            <Setter Property="VerticalAlignment"
                        Value="Center"/>
            <Setter Property="HorizontalAlignment"
                        Value="Left"/>
            <Setter Property="Foreground"
                        Value="#FFB0BEA9"/>
            <Setter Property="FontSize"
                        Value="18"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>

        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Opacity" Value="01"></Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>

        <Style x:Key="DownBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="white"/>
            <Setter Property="BorderBrush" Value="white"/>
            <Setter Property="Opacity" Value="01"></Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="1"/>
        </Style>

        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFFF0000</Color>
        <Color x:Key="ContentAreaColorLight">#FFFF0000</Color>
        <Color x:Key="ContentAreaColorDark">#FFFF0000</Color>

        <Color x:Key="DisabledControlLightColor">#FFFF0000</Color>
        <Color x:Key="DisabledControlDarkColor">#FFFF0000</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFFF0000</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFFF0000</Color>

        <Color x:Key="ControlLightColor">#FFFF0000</Color>
        <Color x:Key="ControlMediumColor">#FFFF0000</Color>
        <Color x:Key="ControlDarkColor">#FFFF0000</Color>

        <Color x:Key="ControlMouseOverColor">#FF000000</Color>
        <Color x:Key="ControlPressedColor">#FFFF0000</Color>


        <Color x:Key="GlyphColor">#FFFF0000</Color>
        <Color x:Key="GlyphMouseOver">#FFFF0000</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Red</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFFF0000</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">#FFFF0000</Color>
        <Color x:Key="SliderTrackDarkColor">#FFFF0000</Color>

        <Color x:Key="NavButtonFrameColor">#FFFF0000</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFFF0000"
                    Offset="0" />
                    <GradientStop Color="#FFFF0000"
                    Offset="0.4" />
                    <GradientStop Color="#FFFF0000"
                    Offset="0.6" />
                    <GradientStop Color="#FFFF0000"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Setter Property="Grid.IsSharedSizeScope"
          Value="True" />
            <Setter Property="HasDropShadow"
          Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                Background="#FF303030"
                BorderThickness="1"
                                CornerRadius="0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#FFFFFFFF" />
                            </Border.BorderBrush>
                            
                            <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                   Value="true">
                                <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                                <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                            </Trigger>
                            <Trigger Property="IsMouseDirectlyOver"
                                     Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#FF505050"></Setter>
                            </Trigger>
                           

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
            <Setter Property="Height"
          Value="1" />
            <Setter Property="Margin"
          Value="0,4,0,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                Background="{DynamicResource MenuPopupBrush}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                    <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="False">
                    <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource ControlLightColor}" />
                                        <GradientStop Color="{StaticResource ControlMouseOverColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                    <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
                    <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- TopLevelItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted"
             Value="false">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource ControlLightColor}" />
                                        <GradientStop Color="{StaticResource ControlMouseOverColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
          BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                            <Path.Stroke>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2"
                 VerticalAlignment="Bottom"
                 DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
                <Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked"
             Value="true">
                    <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable"
             Value="true">
                    <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="#FF505050" />

                            <!--<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="Transparent"
                          Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMouseOverColor}"
                          Offset="1" />
                            </LinearGradientBrush>-->
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="#FF505050" />

                            <!--<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                                <GradientStop Color="Transparent"
                          Offset="1" />
                            </LinearGradientBrush>-->
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
          BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,2,2"
                 DockPanel.Dock="Right" />
                    <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Fill>
                    </Path>
                    <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource MenuPopupBrush}"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="Transparent"
                          Offset="0" />
                                <GradientStop Color="{DynamicResource ControlMouseOverColor}"
                          Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                                <GradientStop Color="Transparent"
                          Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                    <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="4" />
                    <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->
        <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle"
          Value="True" />
            <Style.Triggers>
                <Trigger Property="Role"
             Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                    <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
                </Trigger>
                <Trigger Property="Role"
             Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role"
             Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role"
             Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="CornerRadius" Value="3"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background"  Value="DarkGray"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Effect" Value="{x:Null}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        </Style>

        <Style x:Key="ExportButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            <Setter Property="HorizontalAlignment"
                    Value="Left"/>
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontSize"
                    
                    Value="17"/>
            <Setter Property="Cursor"
                    Value="Hand"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" Style="{StaticResource ButtonBorderStyle}" />
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                                <Setter Property="FontFamily" Value="{StaticResource Normal}"/>
                                <Setter Property="Foreground" >
                                    <Setter.Value>

                                        <LinearGradientBrush EndPoint="0,0.5" Opacity="1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF333333" Offset="0"/>
                                            <GradientStop Color="Black" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Transparent" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="Blue" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Blue" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF000000" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Blue" Offset="0.0" />
                    <GradientStop Color="Blue" Offset="0.6" />
                    <GradientStop Color="Blue" Offset="1.2"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" Margin="0" CornerRadius="5"  Background="Transparent" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="0">
                            <Path x:Name="Arrow" HorizontalAlignment="Center" Height="10" Stretch="Uniform" Margin="0"  VerticalAlignment="Center" Fill="#FF999999" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarVerticalLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" Margin="0" CornerRadius="5"  Background="Transparent" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="0">
                            <Path x:Name="Arrow" HorizontalAlignment="Center" Width="10" Stretch="Uniform" Margin="0"  VerticalAlignment="Center" Fill="#FF999999" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="Border" CornerRadius="3" Background="#FF999999" VerticalAlignment="Center" BorderBrush="White" BorderThickness="0" Height="8" Margin="0,0,0,0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="Border" CornerRadius="3" Background="#FF999999" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="0,0,0,0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="10"/>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition MaxHeight="10"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="0" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarVerticalLineButton}" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarVerticalLineButton}"  Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition Width="15"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="0" Background="Transparent"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}"  Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbHor}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}"  Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        
        
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ScrollBarLineButtonMap" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" Margin="0" CornerRadius="5"  Background="Transparent" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="0">
                            <Path x:Name="Arrow" HorizontalAlignment="Center" Height="10" Stretch="Uniform" Margin="0"  VerticalAlignment="Center" Fill="#FFCCCCCC" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarVerticalLineButtonMap" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" Margin="0" CornerRadius="5"  Background="Transparent" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="0">
                            <Path x:Name="Arrow" HorizontalAlignment="Center" Width="10" Stretch="Uniform" Margin="0"  VerticalAlignment="Center" Fill="#FFCCCCCC" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Arrow" Property="Fill" Value="White"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        <Style x:Key="ScrollBarThumbHorMap" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="Border" CornerRadius="3" Background="#FFCCCCCC" VerticalAlignment="Center" BorderBrush="White" BorderThickness="0" Height="8" Margin="0,0,0,0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbMap" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="Border" CornerRadius="3" Background="#FFCCCCCC" BorderBrush="Red" BorderThickness="0"  Width="8" Margin="0,0,0,0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="HorizontalScrollBarMap" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition Width="15"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="0" Background="Transparent"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButtonMap}"  Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbHorMap}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButtonMap}"  Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="VerticalScrollBarMap" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="10"/>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition MaxHeight="10"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="0" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarVerticalLineButtonMap}" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbMap}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarVerticalLineButtonMap}"  Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>


        <ControlTemplate x:Key="MapScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" Template="{StaticResource VerticalScrollBarMap}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" Template="{StaticResource HorizontalScrollBarMap}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>



        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FF646464"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF646464"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF999999"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FF646464"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FF646464"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF999999"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FF646464"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF646464"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF999999"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="White"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




    </Application.Resources>
</Application>
